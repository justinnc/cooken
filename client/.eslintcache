[{"/home/risan/Desktop/Projects/cooken/client/src/index.js":"1","/home/risan/Desktop/Projects/cooken/client/src/App.js":"2","/home/risan/Desktop/Projects/cooken/client/src/components/views/Home.js":"3","/home/risan/Desktop/Projects/cooken/client/src/contexts/Recipe.js":"4","/home/risan/Desktop/Projects/cooken/client/src/components/SearchBar.js":"5","/home/risan/Desktop/Projects/cooken/client/src/components/ImageCard.js":"6","/home/risan/Desktop/Projects/cooken/client/src/host.js":"7"},{"size":210,"mtime":1611388490921,"results":"8","hashOfConfig":"9"},{"size":254,"mtime":1611674952208,"results":"10","hashOfConfig":"9"},{"size":2706,"mtime":1611846075287,"results":"11","hashOfConfig":"9"},{"size":840,"mtime":1611844835163,"results":"12","hashOfConfig":"9"},{"size":847,"mtime":1611483511583,"results":"13","hashOfConfig":"9"},{"size":738,"mtime":1611846549706,"results":"14","hashOfConfig":"9"},{"size":38,"mtime":1611679014646,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1k3owto",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/risan/Desktop/Projects/cooken/client/src/index.js",[],["34","35"],"/home/risan/Desktop/Projects/cooken/client/src/App.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/views/Home.js",["36"],"import React, { useContext } from 'react'\nimport SearchBar from '../SearchBar'\nimport { RecipeContext } from '../../contexts/Recipe'\nimport ImageCard from '../ImageCard'\n\nconst Home = () => {\n    const { randomRecipes, generateNewRandomRecipes } = useContext(RecipeContext)\n\n    return (\n        <div className=\"container flex flex-col justify-center align-center lg:px-32 lg:py-8 pb-8 mb-8\">\n            <section className=\"md:hidden mt-8\">\n                <div className=\"flex justify-center align-center\">\n                    <img className=\"w-24 cursor-pointer\" src=\"cooken-logo-2.png\" alt=\"Cooken\" />\n                </div>\n                <div className=\"flex justify-center align-center px-2 mt-4\">\n                    <SearchBar className=\"flex-grow\" />\n                </div>\n            </section>\n            <section className=\"hidden md:block mx-8 mt-4\">\n                <div className=\"flex justify-between align-center\">\n                    <img className=\"w-24\" src=\"cooken-logo-2.png\" alt=\"Cooken\" />\n                    <div className=\"flex justify-between align-center py-4\">\n                        <SearchBar className=\"\" />\n                    </div>\n                </div>\n            </section>\n\n            <p className=\"text-center text-gray-500 mt-4\">Some recipes to inspire you.</p>\n\n            {\n                randomRecipes && (\n                    <section className=\"flex flex-wrap self-center mt-2 align-center justify-center sm-500:w-2/3\">\n                        {randomRecipes.map(recipe => <ImageCard key={recipe.image} imageSrc={recipe.image} text={recipe.title} />)}\n                    </section>\n                )\n            }\n\n            <section className=\"flex justify-center align-center mt-4\">\n                <button className=\"flex align-center justify-center border-2 rounded-xl px-1 text-sm text-gray-500 hover:text-gray-600 hover:border-gray-400\" onClick={generateNewRandomRecipes}>\n                    <p className=\"p-1\">\n                        <img className=\"inline-block w-6\" src=\"random-icon.png\" />\n                        Show me other random recipes\n                    </p>\n                </button>\n            </section>\n\n            <section className=\"flex flex-col md:flex-row justify-center align-center mt-3\">\n                <p className=\"text-center text-sm py-4 px-4\">Do you want to make a dish based on what's available on your fridge?</p>\n\n                <button className=\"border-2 rounded-xl py-2 px-4 mt-2 md:mt-0 text-sm border-red-300 text-red-500 self-center hover:bg-red-500 hover:text-white\">\n                    Join / sign in\n                </button>\n            </section>\n        </div>\n    )\n}\n\nexport default Home","/home/risan/Desktop/Projects/cooken/client/src/contexts/Recipe.js",["37"],"import React, { useState, useEffect, createContext } from 'react'\nimport axios from 'axios'\nimport host from '../host'\n\nexport const RecipeContext = createContext()\n\nexport const RecipeProvider = (props) => {\n\n    // RANDOM RECIPES\n    \n    const [randomRecipes, setRandomRecipes] = useState(null)\n\n    const getRandomRecipes = async () => {\n        const { data } = await axios.get(`${host}/recipes/random`)\n\n        return data\n    }\n\n    const generateNewRandomRecipes = () => {\n        getRandomRecipes()\n            .then(randomRecipes => setRandomRecipes(randomRecipes))\n    }\n\n    useEffect(() => {\n        generateNewRandomRecipes()\n    }, [])\n\n    return (\n        <RecipeContext.Provider value={{ randomRecipes, setRandomRecipes, generateNewRandomRecipes }}>\n            {props.children}\n        </RecipeContext.Provider>\n    )\n}\n","/home/risan/Desktop/Projects/cooken/client/src/components/SearchBar.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/ImageCard.js",["38"],"/home/risan/Desktop/Projects/cooken/client/src/host.js",["39"],"export default 'http://localhost:5000'",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":41,"column":25,"nodeType":"46","endLine":41,"endColumn":83},{"ruleId":"47","severity":1,"message":"48","line":26,"column":8,"nodeType":"49","endLine":26,"endColumn":10,"suggestions":"50"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":13,"nodeType":"46","endLine":6,"endColumn":99},{"ruleId":"51","severity":1,"message":"52","line":1,"column":1,"nodeType":"53","endLine":1,"endColumn":39},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateNewRandomRecipes'. Either include it or remove the dependency array.","ArrayExpression",["56"],"import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [generateNewRandomRecipes]",{"range":"59","text":"60"},[648,650],"[generateNewRandomRecipes]"]