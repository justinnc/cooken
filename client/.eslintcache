[{"/home/risan/Desktop/Projects/cooken/client/src/index.js":"1","/home/risan/Desktop/Projects/cooken/client/src/App.js":"2","/home/risan/Desktop/Projects/cooken/client/src/components/views/Home.js":"3","/home/risan/Desktop/Projects/cooken/client/src/contexts/Recipe.js":"4","/home/risan/Desktop/Projects/cooken/client/src/components/SearchBar.js":"5","/home/risan/Desktop/Projects/cooken/client/src/components/ImageCard.js":"6","/home/risan/Desktop/Projects/cooken/client/src/host.js":"7","/home/risan/Desktop/Projects/cooken/client/src/components/ImageCardList.js":"8","/home/risan/Desktop/Projects/cooken/client/src/components/SkeletonImageCardList.js":"9","/home/risan/Desktop/Projects/cooken/client/src/components/views/Recipe.js":"10","/home/risan/Desktop/Projects/cooken/client/src/components/RecipeInfo.js":"11","/home/risan/Desktop/Projects/cooken/client/src/components/RecipeIngredientsDirections.js":"12","/home/risan/Desktop/Projects/cooken/client/src/components/views/RecipeSearchResult.js":"13","/home/risan/Desktop/Projects/cooken/client/src/components/SkeletonRecipe.js":"14","/home/risan/Desktop/Projects/cooken/client/src/components/views/JoinLogin.js":"15","/home/risan/Desktop/Projects/cooken/client/src/contexts/User.js":"16","/home/risan/Desktop/Projects/cooken/client/src/components/Header.js":"17","/home/risan/Desktop/Projects/cooken/client/src/components/Nav.js":"18","/home/risan/Desktop/Projects/cooken/client/src/components/Alert.js":"19","/home/risan/Desktop/Projects/cooken/client/src/helpers/toast.js":"20","/home/risan/Desktop/Projects/cooken/client/src/components/views/MyIngredients.js":"21","/home/risan/Desktop/Projects/cooken/client/src/components/SearchIngredientsBar.js":"22","/home/risan/Desktop/Projects/cooken/client/src/helpers/index.js":"23","/home/risan/Desktop/Projects/cooken/client/src/helpers/capitalizeFirstLetter.js":"24","/home/risan/Desktop/Projects/cooken/client/src/components/RecipesICanMake.js":"25","/home/risan/Desktop/Projects/cooken/client/src/helpers/groupRecipesBy.js":"26"},{"size":310,"mtime":1614399211709,"results":"27","hashOfConfig":"28"},{"size":1422,"mtime":1614413073697,"results":"29","hashOfConfig":"28"},{"size":3441,"mtime":1614004506402,"results":"30","hashOfConfig":"28"},{"size":1666,"mtime":1614297244007,"results":"31","hashOfConfig":"28"},{"size":1308,"mtime":1614398768872,"results":"32","hashOfConfig":"28"},{"size":3137,"mtime":1614004480753,"results":"33","hashOfConfig":"28"},{"size":57,"mtime":1612484405627,"results":"34","hashOfConfig":"28"},{"size":674,"mtime":1614412529963,"results":"35","hashOfConfig":"28"},{"size":1162,"mtime":1614644019340,"results":"36","hashOfConfig":"28"},{"size":2095,"mtime":1614645697651,"results":"37","hashOfConfig":"28"},{"size":1478,"mtime":1612004249775,"results":"38","hashOfConfig":"28"},{"size":5303,"mtime":1613295393695,"results":"39","hashOfConfig":"28"},{"size":3743,"mtime":1613294202521,"results":"40","hashOfConfig":"28"},{"size":1118,"mtime":1613202598674,"results":"41","hashOfConfig":"28"},{"size":10518,"mtime":1614400210539,"results":"42","hashOfConfig":"28"},{"size":4918,"mtime":1614414528488,"results":"43","hashOfConfig":"28"},{"size":1048,"mtime":1613294227533,"results":"44","hashOfConfig":"28"},{"size":680,"mtime":1614399239353,"results":"45","hashOfConfig":"28"},{"size":1965,"mtime":1613694170707,"results":"46","hashOfConfig":"28"},{"size":626,"mtime":1614336868927,"results":"47","hashOfConfig":"28"},{"size":5271,"mtime":1614645362000,"results":"48","hashOfConfig":"28"},{"size":3586,"mtime":1614643239337,"results":"49","hashOfConfig":"28"},{"size":240,"mtime":1614426388519,"results":"50","hashOfConfig":"28"},{"size":113,"mtime":1614411023742,"results":"51","hashOfConfig":"28"},{"size":866,"mtime":1614645415324,"results":"52","hashOfConfig":"28"},{"size":719,"mtime":1614644427324,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"18185u9",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/risan/Desktop/Projects/cooken/client/src/index.js",[],["110","111"],"/home/risan/Desktop/Projects/cooken/client/src/App.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/views/Home.js",[],"/home/risan/Desktop/Projects/cooken/client/src/contexts/Recipe.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/SearchBar.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/ImageCard.js",[],"/home/risan/Desktop/Projects/cooken/client/src/host.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/ImageCardList.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/SkeletonImageCardList.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/views/Recipe.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/RecipeInfo.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/RecipeIngredientsDirections.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/views/RecipeSearchResult.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/SkeletonRecipe.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/views/JoinLogin.js",[],"/home/risan/Desktop/Projects/cooken/client/src/contexts/User.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/Header.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/Nav.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/Alert.js",[],"/home/risan/Desktop/Projects/cooken/client/src/helpers/toast.js",[],["112","113"],"/home/risan/Desktop/Projects/cooken/client/src/components/views/MyIngredients.js",["114"],"import React, { useContext, useState, useEffect } from 'react'\nimport { UserContext } from '../../contexts/User'\nimport Nav from '../Nav'\nimport SearchIngredientsBar from '../SearchIngredientsBar'\nimport RecipesICanMake from '../RecipesICanMake'\nimport { toastError, groupRecipesBy } from '../../helpers'\n\nconst MyIngredients = (props) => {\n    const { updateUserIngredients, authenticate, findByIngredients } = useContext(UserContext)\n    const [ingredients, setIngredients] = useState([])\n    const [showRecipesICanMake, setShowRecipesICanMake] = useState(false)\n    const [loadRecipesICanMake, setLoadRecipesICanMake] = useState(false)\n    const [recipeGroups, setRecipeGroups] = useState([])\n\n    const addIngredient = (newIngredient) => {\n        if (!ingredients.includes(newIngredient)) {\n            if (newIngredient.length) {\n                if (ingredients.length) {\n                    setIngredients([...ingredients, newIngredient])\n                } else {\n                    setIngredients([newIngredient])\n                }\n            }\n        } else {\n            toastError(\"You already have that in your list of ingredients.\")\n        }\n    }\n\n    const removeIngredient = (idx) => {\n        let ingredientsCopy = [...ingredients]\n        ingredientsCopy.splice(idx, 1)\n        setIngredients(ingredientsCopy)\n    }\n\n    useEffect(() => {\n        authenticate()\n            .then(data => {\n                if (data.ingredientsStr?.length > 0) {\n                    setIngredients(data.ingredientsStr.split(','))\n                }\n            })\n            .catch(err => {\n                toastError(err)\n            })\n    }, [authenticate])\n\n    useEffect(() => {\n        updateUserIngredients(ingredients)\n            .catch(err => {\n                toastError(err)\n            })\n    }, [ingredients, updateUserIngredients])\n\n    useEffect(() => {\n        if (showRecipesICanMake) {\n            console.log(ingredients.length)\n            if (ingredients.length === 0) {\n                setShowRecipesICanMake(false)\n                setLoadRecipesICanMake(false)\n                toastError('Please add an ingredient first!')\n            } else {\n                setLoadRecipesICanMake(true)\n                findByIngredients()\n                    .then(data => {\n                        const grouped = groupRecipesBy(data, 'usedIngredientCount', 'desc', ingredients.length)\n                        setRecipeGroups(grouped)\n                    })\n                    .catch(err => toastError(err))\n            }\n        }\n    }, [ingredients, showRecipesICanMake])\n\n    return (\n        <div\n            style={{ backgroundImage: \"url('/girl-open-fridge.png')\" }}\n            className=\"h-screen bg-bottom bg-no-repeat bg-contain bg-indigo-10 sm-500:bg-75% md:bg-30% md:bg-right\"\n        >\n            <Nav showLogo={true} />\n            <div\n                className=\"container sm-500:w-2/3 lg:w-1/3 sm-500:mx-auto\"\n            >\n                <div className=\"flex flex-col justify-center pt-4 align-center\">\n                    <section className=\"mx-3\">\n                        <h1\n                            className=\"text-lg font-bold\"\n                        >Cook with what you have</h1>\n                        <p className=\"my-4\">Enter the ingredients you have on hand, and we'll show you recipes you could make.</p>\n                    </section>\n                    <SearchIngredientsBar\n                        addIngredient={addIngredient}\n                        className={\"mx-2\"}\n                    />\n                    <section className=\"flex flex-wrap mt-2\">\n                        {ingredients.map((ingredient, idx) => {\n                            return <div\n                                key={idx}\n                                onClick={() => removeIngredient(idx)}\n                                className=\"flex inline-block py-2 pl-4 pr-3 mt-3 ml-2 bg-white border shadow-lg cursor-pointer rounded-xl\"\n                            >\n                                <span>{ingredient}</span>\n                                <img\n                                    src=\"delete-icon.svg\"\n                                    alt=\"delete\"\n                                    className=\"h-4 ml-1 place-self-center\"\n                                />\n                            </div>\n                        })}\n                    </section>\n                    <section className=\"flex justify-center mt-8 align-center\">\n                        <button\n                            onClick={() => {\n                                setShowRecipesICanMake(true)\n                            }}\n                            className=\"self-center px-4 py-2 text-lg text-white bg-red-500 shadow rounded-xl focus:outline-none md:mt-0 bg-gradient-to-r hover:from-purple-600 hover:via-indigo-500 hover:to-indigo-600\"\n                        >\n                            Show me what I can make\n                            </button>\n                    </section>\n                </div>\n            </div>\n            {showRecipesICanMake && loadRecipesICanMake && (\n                <RecipesICanMake\n                    recipeGroups={recipeGroups} />\n            )}\n        </div>\n    )\n}\n\nexport default MyIngredients\n","/home/risan/Desktop/Projects/cooken/client/src/components/SearchIngredientsBar.js",["115"],"import React, { useContext, useState, useEffect } from 'react'\nimport { RecipeContext } from '../contexts/Recipe'\n\nconst SearchBar = (props) => {\n    const { autocompleteIngredient } = useContext(RecipeContext)\n    const { addIngredient } = props\n    const [searchInput, setSearchInput] = useState('')\n    const [searchInputFinal, setSearchInputFinal] = useState('')\n    const [suggestions, setSuggestions] = useState([])\n    const [cursor, setCursor] = useState(0)\n\n    const handleChange = (e) => {\n        setSearchInput(e.target.value)\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            if (cursor > 0) {\n                setSearchInputFinal(suggestions[cursor])\n            } else if (suggestions.length) {\n                setSearchInputFinal(suggestions[0])\n            }\n        }\n\n        if (e.keyCode === 38 && cursor > -1) {\n            setCursor(cursor - 1)\n        } else if (e.keyCode === 40 && cursor < suggestions.length - 1) {\n            setCursor(cursor + 1)\n        }\n    }\n\n    useEffect(() => {\n        autocompleteIngredient(searchInput)\n            .then(result => {\n                result = result.map((obj) => {\n                    return obj.name\n                }).slice(0, 3)\n\n                setSuggestions(result)\n            })\n            .catch(err => console.log(err))\n    }, [searchInput, autocompleteIngredient]) // autocomplete based on current search input\n\n    useEffect(() => {\n        addIngredient(searchInputFinal)\n        setSearchInput('')\n        setCursor(0)\n        setSuggestions([])\n    }, [searchInputFinal]) // add ingredient when the search input is final\n\n    return (\n        <div\n            className={\"focus:outline relative shadow-md rounded-lg flex-grow \" + (props.className || \"\")}\n        >\n            <span className=\"absolute inset-y-0 left-0 pl-2 top-1\">\n                <button\n                    type=\"submit\" className=\"p-1 focus:outline-none focus:shadow-outline\"\n                    onClick={e => {\n                        e.key = 'Enter'\n                        handleKeyDown(e)\n                    }} // use the same behaviour as enter keydown\n                >\n                    <img src=\"add-icon.svg\" alt=\"add\" />\n                </button>\n            </span>\n            <input\n                className={\"focus:outline-none py-2 pl-8 text-center text-sm border-solid w-full border-b\"}\n                type=\"search\"\n                placeholder=\"add an ingredient...\"\n                value={searchInput}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n            />\n            <ul className=\"relative right-0 mx-auto text-sm text-center text-gray-800 bg-white\">\n                {suggestions.map((suggestion, idx) => {\n                    let className = (cursor === idx ? 'bg-gray-50 ' : '') + \"block w-full px-1 pt-1 pl-4 cursor-pointer \"\n\n                    if (idx === suggestions.length - 1) {\n                        className += \"pb-2\"\n                    } else {\n                        className += \"pb-1\"\n                    }\n\n                    return <li\n                        key={idx}\n                        className={className}\n                        onMouseEnter={() => setCursor(idx)}\n                        onClick={e => {\n                            e.key = 'Enter'\n                            handleKeyDown(e)\n                        }} // use the same behaviour as enter keydown\n                    >{suggestion}</li>\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default SearchBar\n","/home/risan/Desktop/Projects/cooken/client/src/helpers/index.js",[],"/home/risan/Desktop/Projects/cooken/client/src/helpers/capitalizeFirstLetter.js",[],"/home/risan/Desktop/Projects/cooken/client/src/components/RecipesICanMake.js",[],"/home/risan/Desktop/Projects/cooken/client/src/helpers/groupRecipesBy.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":71,"column":8,"nodeType":"124","endLine":71,"endColumn":42,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":49,"column":8,"nodeType":"124","endLine":49,"endColumn":26,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'findByIngredients'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'addIngredient'. Either include it or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [findByIngredients, ingredients, showRecipesICanMake]",{"range":"136","text":"137"},"Update the dependencies array to be: [addIngredient, searchInputFinal]",{"range":"138","text":"139"},[2555,2589],"[findByIngredients, ingredients, showRecipesICanMake]",[1576,1594],"[addIngredient, searchInputFinal]"]